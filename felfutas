public class Felfutas
{
	private float adat_tar;
	private int adat_max;
	private int T_tar;
	private float ido_tar;
	private float T_ido_fel;	//[s]
	private float T_ido_le;		//[s]
	private float fel_ido;		//[s]
	private float le_ido;		//[s]
	private int alap;			//[ms]
	private int T;

	public Felfutas(int init_max, int init_T, float init_T_ido_fel = -1.0f, float init_T_ido_le = -1.0f, float init_fel_ido = -1.0f, float init_le_ido = -1.0f, int init_alap = 1, float init_adat = 0)
	{
		adat_tar = init_adat;
		adat_max = init_max;
		T_tar = -1;
		ido_tar = 0;
		T = init_T;
		T_ido_fel = init_T_ido_fel;
		T_ido_le = init_T_ido_le;
		fel_ido = init_fel_ido;
		le_ido = init_le_ido;
		alap = init_alap;

		if (T_ido_fel == -1.0f)
			T_ido_fel = 0.3125f * fel_ido;
		if (T_ido_le == -1.0f)
			T_ido_le = 0.3125f * le_ido;
	}

	public float work(bool kapcsolt)
	{
		if (kapcsolt && T_tar < 0)
		{
			T_tar *= -1;
			ido_tar = ido_tar * T_ido_fel / T_ido_le;
		}
		if (!kapcsolt && T_tar > 0)
		{
			T_tar *= -1;
			ido_tar = ido_tar * T_ido_le / T_ido_fel;
		}

		switch (T_tar)
		{
			case 1:
				adat_tar += adat_max * 0.5f / ((T_ido_fel * 1000)/alap);
				adat_tar = adat_tar >= adat_max * 0.5f ? adat_max * 0.5f : adat_tar;
				ido_tar = adat_tar >= adat_max * 0.5f ? T_ido_fel : ido_tar;
				break;
			case 2:
				adat_tar += adat_max * 0.25f / ((T_ido_fel * 1000) / alap);
				adat_tar = adat_tar >= adat_max * (1.0f - 0.25f) ? adat_max * (1.0f - 0.25f) : adat_tar;
				ido_tar = adat_tar >= adat_max * (1.0f - 0.25f) ? T_ido_fel : ido_tar;
				break;
			case 3:
				adat_tar += adat_max * 0.125f / ((T_ido_fel * 1000) / alap);
				adat_tar = adat_tar >= adat_max * (1.0f - 0.125f) ? adat_max * (1.0f - 0.125f) : adat_tar;
				ido_tar = adat_tar >= adat_max * (1.0f - 0.125f) ? T_ido_fel : ido_tar;
				break;
			case 4:
				adat_tar += adat_max * 0.0625f / ((T_ido_fel * 1000) / alap);
				adat_tar = adat_tar >= adat_max * (1.0f - 0.0625f) ? adat_max * (1.0f - 0.0625f) : adat_tar;
				ido_tar = adat_tar >= adat_max * (1.0f - 0.0625f) ? T_ido_fel : ido_tar;
				break;
			case 5:
				adat_tar += adat_max * 0.03125f / ((T_ido_fel * 1000) / alap);
				adat_tar = adat_tar >= adat_max * (1.0f - 0.03125f) ? adat_max * (1.0f - 0.03125f) : adat_tar;
				ido_tar = adat_tar >= adat_max * (1.0f - 0.03125f) ? T_ido_fel : ido_tar;
				break;
			case 6:
				adat_tar += adat_max * 0.015625f / ((T_ido_fel * 1000) / alap);
				adat_tar = adat_tar >= adat_max * (1.0f - 0.015625f) ? adat_max * (1.0f - 0.015625f) : adat_tar;
				ido_tar = adat_tar >= adat_max * (1.0f - 0.015625f) ? T_ido_fel : ido_tar;
				break;
			case 7:
				adat_tar += adat_max * 0.0078125f / ((T_ido_fel * 1000) / alap);
				adat_tar = adat_tar >= adat_max * (1.0f - 0.0078125f) ? adat_max * (1.0f - 0.0078125f) : adat_tar;
				ido_tar = adat_tar >= adat_max * (1.0f - 0.0078125f) ? T_ido_fel : ido_tar;
				break;
			case 8:
				adat_tar += adat_max * 0.0078125f / ((T_ido_fel * 1000) / alap);
				adat_tar = adat_tar >= adat_max ? adat_max : adat_tar;
				ido_tar = adat_tar >= adat_max ? T_ido_fel : ido_tar;
				break;
			case -8:
				adat_tar -= adat_max * 0.5f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= adat_max * 0.5f ? adat_max * 0.5f : adat_tar;
				ido_tar = adat_tar <= adat_max * 0.5f ? 0 : ido_tar;
				break;
			case -7:
				adat_tar -= adat_max * 0.25f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= adat_max * 0.25f ? adat_max * 0.25f : adat_tar;
				ido_tar = adat_tar <= adat_max * 0.25f ? 0 : ido_tar;
				break;
			case -6:
				adat_tar -= adat_max * 0.125f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= adat_max * 0.125f ? adat_max * 0.125f : adat_tar;
				ido_tar = adat_tar <= adat_max * 0.125f ? 0 : ido_tar;
				break;
			case -5:
				adat_tar -= adat_max * 0.0625f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= adat_max * 0.0625f ? adat_max * 0.0625f : adat_tar;
				ido_tar = adat_tar <= adat_max * 0.0625f ? 0 : ido_tar;
				break;
			case -4:
				adat_tar -= adat_max * 0.03125f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= adat_max * 0.03125f ? adat_max * 0.03125f : adat_tar;
				ido_tar = adat_tar <= adat_max * 0.03125f ? 0 : ido_tar;
				break;
			case -3:
				adat_tar -= adat_max * 0.015625f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= adat_max * 0.015625f ? adat_max * 0.015625f : adat_tar;
				ido_tar = adat_tar <= adat_max * 0.015625f ? 0 : ido_tar;
				break;
			case -2:
				adat_tar -= adat_max * 0.0078125f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= adat_max * 0.0078125f ? adat_max * 0.0078125f : adat_tar;
				ido_tar = adat_tar <= adat_max * 0.0078125f ? 0 : ido_tar;
				break;
			case -1:
				adat_tar -= adat_max * 0.0078125f / ((T_ido_le * 1000) / alap);
				adat_tar = adat_tar <= 0 ? 0 : adat_tar;
				ido_tar = adat_tar <= 0 ? 0 : ido_tar;
				break;
			default:
				break;
		}

		ido_tar += T_tar > 0 ? (float)alap/1000 : -(float)alap/1000;

		if (ido_tar >= T_ido_fel && T_tar > 0 && T_tar < 8) 
		{
			T_tar += T_tar < T ? 1 : 0;
			ido_tar = 0;
		}
		else if (ido_tar <= 0 && T_tar < -1)
		{
			T_tar += T_tar < -1 ? 1 : 0;
			ido_tar = T_ido_le;
		}

		return adat_tar;
	}
}
